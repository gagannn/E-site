	<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">


	<http pattern="/resources/**" security="none"/>
	
	<http>
    	<intercept-url pattern="/addToCart/**"
     access="hasAuthority('Role_Admin')"/>
     <form-login/>
      <access-denied-handler error-page="/access-denied"/>
   
     
    <!-- <form-login login-page="/login" username-parameter="email" password-parameter="password" login-processing-url="/log"/>
    <access-denied-handler error-page="/access-denied"/>
     --><!-- <logout delete-cookies="true" logout-url="/perform-logout" logout-success-url="/"/> -->
    <!-- <csrf/>
     -->
    <!-- <headers>
    	<cache-control/>
    	<hsts/>
    </headers> -->
  	</http>
  	
 
 	<authentication-manager>
  	 <authentication-provider>
  	  <jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select email,password,enabled from usertablenew where email=?"
			authorities-by-username-query="select email,role from usertablenew where email=?"/>
      
    </authentication-provider>
  </authentication-manager>
</beans:beans>